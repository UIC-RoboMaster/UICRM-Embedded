// Copyright (c) 2025. BNU-HKBU UIC RoboMaster
//
// This program is free software: you can redistribute it
// and/or modify it under the terms of the GNU General
// Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// This program is distributed in the hope that it will be
// useful, but WITHOUT ANY WARRANTY; without even
// the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General
// Public License along with this program.  If not, see
// <https://www.gnu.org/licenses/>.

#include "weight.h"

CCMRAM const float W_relu[] = {
    -0.24149461f, 0.47922814f,  0.50131214f,  -0.4798298f, -0.2532205f, 0.3741976f,   0.5106996f,
    -0.5723628f,  0.29312927f,  0.14284667f,  0.18007861f, 0.53011316f, 0.27659953f,  0.513101f,
    -0.35395074f, 0.54553413f,  -0.16416028f, -0.6303126f, -0.4120823f, 0.2846507f,   0.23997353f,
    0.33834803f,  -0.31282267f, -0.0821689f,  0.64450747f, 0.21232021f, -0.21048163f, 0.14289859f,
    0.9056437f,   -0.02009336f, 0.5585036f,   0.11996085f};

CCMRAM const float b_relu[] = {0.2994836f,   -1.6755055f,  0.14872806f,  0.18468706f,
                               1.1543086f,   -0.43254453f, -0.13702036f, -0.016588408f,
                               -0.41021687f, 0.36008996f,  0.7056856f,   -0.47748086f,
                               -0.37318128f, 0.09698134f,  0.12443947f,  -0.033093266f};

CCMRAM const float W_relu2[] = {
    -0.11274072f,   -0.26884854f,  -0.31818074f,  0.6240941f,    0.34621048f,    -2.4826257f,
    -0.33750778f,   -0.12793626f,  0.32733333f,   -0.48746654f,  -1.6765659f,    0.09442402f,
    -1.6495746f,    -0.37134352f,  -0.06523157f,  0.196599f,     0.2872597f,     -0.94669527f,
    -0.4405022f,    0.39935574f,   -0.18897972f,  0.0573984f,    0.13863692f,    -0.2820638f,
    -0.42445695f,   -0.17804939f,  -0.34729517f,  -0.47730774f,  -0.2136918f,    -0.2470234f,
    0.40257385f,    -0.91330934f,  0.38943264f,   -0.40674022f,  0.061517186f,   -0.32632932f,
    0.15824439f,    0.24751f,      0.23129983f,   0.3426468f,    0.2379264f,     0.23518258f,
    -1.3227779f,    0.28530386f,   -1.0199721f,   -0.3314736f,   0.32155734f,    -0.009451947f,
    -0.24686457f,   -0.44752792f,  0.44205517f,   -0.4762933f,   -0.0024825886f, 0.49246085f,
    0.07856348f,    -0.57931805f,  0.29061812f,   0.35466126f,   0.41234294f,    0.3665784f,
    -0.07089147f,   0.13843477f,   -0.34019142f,  -0.16569981f,  0.5123804f,     0.46304482f,
    0.15424874f,    0.5077822f,    0.011534924f,  -0.70566744f,  -0.029166967f,  0.00042905967f,
    0.037140716f,   0.060699154f,  0.15924428f,   -0.4728702f,   0.3066106f,     0.04420945f,
    -5.6324525f,    0.08400713f,   -0.04175812f,  -0.3746421f,   0.059250303f,   0.12598291f,
    0.14477508f,    0.22857308f,   0.25278407f,   -1.7651987f,   -0.4251639f,    -0.25146306f,
    -0.43776813f,   0.089096405f,  -0.35222173f,  0.10650184f,   -0.10793213f,   -0.18450674f,
    0.3170716f,     0.4021158f,    -0.19625016f,  0.19961153f,   0.14310044f,    0.32879505f,
    -0.16241178f,   -0.40421972f,  -0.06590737f,  -0.03332301f,  -0.72458214f,   0.26022598f,
    -0.63882923f,   -0.06313098f,  0.38335463f,   0.38139522f,   -0.052731417f,  0.0479196f,
    0.089213274f,   0.045557708f,  -0.40378654f,  0.3963642f,    -0.33036295f,   -0.024431698f,
    0.20503017f,    -0.44227433f,  0.17165463f,   0.12996592f,   -0.06749952f,   0.14674279f,
    0.2079375f,     0.20110855f,   0.7082237f,    0.3215022f,    -0.45005456f,   0.66308486f,
    -0.018726353f,  -0.48203918f,  -0.09722185f,  -1.1290166f,   0.15686853f,    -0.63658667f,
    0.15544558f,    -0.5386509f,   0.20366716f,   -0.070439056f, 0.568773f,      0.20577393f,
    -0.28900704f,   0.21761343f,   0.1713223f,    -0.01243686f,  0.2705438f,     -0.008152074f,
    -0.26546136f,   0.30531147f,   0.4735157f,    0.2792148f,    -0.10548058f,   0.4089599f,
    -0.09441017f,   -0.2400988f,   -0.041295737f, -0.29637372f,  0.052823853f,   0.46683854f,
    0.018222768f,   -0.4375097f,   0.093791105f,  0.31804574f,   0.16785061f,    0.30490515f,
    0.037038468f,   0.1784709f,    -0.21872039f,  0.27974132f,   -0.10488409f,   -0.39632067f,
    -0.4423851f,    0.29102498f,   -0.16430871f,  -0.14018042f,  -0.46373674f,   0.3474527f,
    0.21232437f,    -0.41460693f,  -0.41148677f,  -1.1273178f,   -0.25038847f,   -0.030042809f,
    -0.58375645f,   -0.096017785f, -1.0291692f,   -0.047899865f, 0.20118959f,    -0.13664098f,
    -0.29437074f,   0.25477996f,   0.63920593f,   -0.24880551f,  0.19279757f,    0.4970879f,
    -0.28775406f,   0.20165068f,   0.40909508f,   0.14107655f,   0.40997827f,    0.48870438f,
    0.19164604f,    -0.19181383f,  0.93361604f,   0.3333709f,    0.19139722f,    -0.23319405f,
    0.30243117f,    0.44087267f,   -0.07126297f,  0.23621795f,   -0.18401504f,   -0.3844879f,
    0.105194f,      0.28428102f,   -0.38414872f,  -0.021287136f, 0.014290982f,   0.31905177f,
    -0.14982346f,   -0.43699184f,  0.5514378f,    0.43114385f,   -0.1313246f,    0.43331885f,
    0.44505337f,    0.26983947f,   -0.41944802f,  -0.3832314f,   -0.35993043f,   0.007841324f,
    0.4314582f,     -0.28144726f,  0.49208882f,   0.26263615f,   -0.6908846f,    0.64596707f,
    -0.0043521724f, 0.18205985f,   0.049872175f,  0.4354612f,    0.1696114f,     0.23274001f,
    -0.2093554f,    0.038454823f,  -0.21336825f,  0.191473f,     0.31857556f,    0.101667956f,
    -0.12728742f,   0.07645066f,   -0.29942256f,  0.1961503f};

CCMRAM const float b_relu2[] = {-0.34272587f, 0.2451981f,   0.5447643f,    -0.30491856f,
                                -0.28598183f, 0.24251898f,  -0.020264165f, 0.16817524f,
                                0.4345641f,   0.30907702f,  0.19763012f,   0.31916845f,
                                -0.02726964f, -0.03379958f, 0.012561608f,  0.28955373f};

CCMRAM const float W_output[] = {-0.51435775f, -0.84773326f, 1.0575833f, -0.7169872f,
                                 -0.5358879f,  0.1627581f,   0.5270894f, -2.1309624f,
                                 0.9061274f,   0.5968292f,   0.6464468f, 0.2340433f,
                                 0.98980683f,  -0.17969719f, 1.0373071f, -0.9638522f};

CCMRAM const float b_output[] = {0.31032756f};
